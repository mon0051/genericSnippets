{"version":3,"sources":["../../../../spec/binaryNumbers/simple/binaryNumberAdd.spec.js"],"names":["binaryAdd","require","BinaryNumberState","describe","it","n1","n2","result","expect","toJsNumber","toBe"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,iDAAR,CAAhB;AACA,IAAIC,oBAAoBD,QAAQ,mEAAR,CAAxB;;AAEAE,SAAS,wBAAT,EAAkC,YAAU;AACxCC,OAAG,yBAAH,EAA8B,YAAY;AACtC,YAAIC,KAAK,IAAIH,iBAAJ,CAAsB,CAAtB,CAAT;AACA,YAAII,KAAK,IAAIJ,iBAAJ,CAAsB,CAAtB,CAAT;;AAEA,YAAIK,SAASP,UAAUK,EAAV,EAAcC,EAAd,CAAb;;AAEAE,eAAOD,OAAOE,UAAP,EAAP,EAA4BC,IAA5B,CAAiC,EAAjC;AACH,KAPD;;AASAN,OAAG,0BAAH,EAA+B,YAAY;AACvC,YAAIC,KAAK,IAAIH,iBAAJ,CAAsB,CAAtB,CAAT;AACA,YAAII,KAAK,IAAIJ,iBAAJ,CAAsB,CAAtB,CAAT;;AAEA,YAAIK,SAASP,UAAUK,EAAV,EAAcC,EAAd,CAAb;;AAEAE,eAAOD,OAAOE,UAAP,EAAP,EAA4BC,IAA5B,CAAiC,EAAjC;AACH,KAPD;;AASAN,OAAG,2BAAH,EAAgC,YAAY;AACxC,YAAIC,KAAK,IAAIH,iBAAJ,CAAsB,CAAtB,CAAT;AACA,YAAII,KAAK,IAAIJ,iBAAJ,CAAsB,CAAtB,CAAT;;AAEA,YAAIK,SAASP,UAAUK,EAAV,EAAcC,EAAd,CAAb;;AAEAE,eAAOD,OAAOE,UAAP,EAAP,EAA4BC,IAA5B,CAAiC,EAAjC;AACH,KAPD;;AASAN,OAAG,+BAAH,EAAoC,YAAY;AAC5C,YAAIC,KAAK,IAAIH,iBAAJ,CAAsB,CAAtB,CAAT;AACA,YAAII,KAAK,IAAIJ,iBAAJ,CAAsB,CAAC,CAAvB,CAAT;;AAEA,YAAIK,SAASP,UAAUK,EAAV,EAAcC,EAAd,CAAb;;AAEAE,eAAOD,OAAOE,UAAP,EAAP,EAA4BC,IAA5B,CAAiC,CAAjC;AACH,KAPD;AASH,CArCD","file":"binaryNumberAdd.spec.js","sourcesContent":["let binaryAdd = require('../../../src/app/binaryNumbers/simple/binaryAdd');\nlet BinaryNumberState = require('../../../src/app/binaryNumbers/simple/low-level/BinaryNumberState');\n\ndescribe(\"Binary Number Addition\",function(){\n    it(\"odd plus odd 5 + 7 = 12\", function () {\n        let n1 = new BinaryNumberState(5);\n        let n2 = new BinaryNumberState(7);\n\n        let result = binaryAdd(n1, n2);\n\n        expect(result.toJsNumber()).toBe(12);\n    });\n\n    it(\"even plus odd 6 + 7 = 13\", function () {\n        let n1 = new BinaryNumberState(6);\n        let n2 = new BinaryNumberState(7);\n\n        let result = binaryAdd(n1, n2);\n\n        expect(result.toJsNumber()).toBe(13);\n    });\n\n    it(\"even plus even 6 + 6 = 12\", function () {\n        let n1 = new BinaryNumberState(6);\n        let n2 = new BinaryNumberState(6);\n\n        let result = binaryAdd(n1, n2);\n\n        expect(result.toJsNumber()).toBe(12);\n    });\n\n    it(\"even plus negative 6 + -6 = 0\", function () {\n        let n1 = new BinaryNumberState(6);\n        let n2 = new BinaryNumberState(-6);\n\n        let result = binaryAdd(n1, n2);\n\n        expect(result.toJsNumber()).toBe(0);\n    });\n\n});"]}