{"version":3,"sources":["../../../../../src/app/binaryNumbers/mixed-numeral/MixedNumeral.js"],"names":["BinaryNumberState","require","MixedNumeral","integer","numerator","denominator","that","toJsNumber","module","exports"],"mappings":";;AAAA,IAAIA,oBAAoBC,QAAQ,uCAAR,CAAxB;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA8BC,SAA9B,EAAwCC,WAAxC,EAAoD;AAChD,QAAIC,OAAO,IAAX;;AAEAA,SAAKH,OAAL,GAAeA,WAAW,IAAIH,iBAAJ,EAA1B;AACAM,SAAKF,SAAL,GAAiBA,aAAa,IAAIJ,iBAAJ,EAA9B;AACAM,SAAKD,WAAL,GAAmBA,eAAe,IAAIL,iBAAJ,EAAlC;;AAEA,SAAKO,UAAL,GAAkB,YAAU;AACxB,eAAQD,KAAKH,OAAL,CAAaI,UAAb,EAAD,GAA+BD,KAAKF,SAAL,CAAeG,UAAf,KAA8BD,KAAKD,WAAL,CAAiBE,UAAjB,EAApE;AACH,KAFD;AAGH;;AAEDC,OAAOC,OAAP,GAAiBP,YAAjB","file":"MixedNumeral.js","sourcesContent":["let BinaryNumberState = require('../simple/low-level/BinaryNumberState');\n\nfunction MixedNumeral(integer,numerator,denominator){\n    let that = this;\n\n    that.integer = integer || new BinaryNumberState();\n    that.numerator = numerator || new BinaryNumberState();\n    that.denominator = denominator || new BinaryNumberState();\n\n    this.toJsNumber = function(){\n        return (that.integer.toJsNumber()) + (that.numerator.toJsNumber() / that.denominator.toJsNumber());\n    }\n}\n\nmodule.exports = MixedNumeral;"]}