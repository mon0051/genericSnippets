{"version":3,"sources":["../../../../src/app/binaryNumbers/binaryMulti.js"],"names":["BinaryNumberState","require","binaryAdd","multiImpl","n1","n2","result","bits","forEach","value","index","temp","i","unshift","multi","isPositive","module","exports"],"mappings":";;AAAA,IAAIA,oBAAoBC,QAAQ,qBAAR,CAAxB;AACA,IAAIC,YAAYD,QAAQ,aAAR,CAAhB;;AAEA,SAASE,SAAT,CAAmBC,EAAnB,EAAsBC,EAAtB,EAAyB;AACrB,QAAIC,SAAS,IAAIN,iBAAJ,EAAb;;AAEAK,OAAGE,IAAH,CAAQC,OAAR,CAAgB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACpC,YAAGD,UAAU,KAAb,EAAoB;AACpB,YAAIE,OAAO,IAAIX,iBAAJ,CAAsBI,EAAtB,CAAX;AACA,aAAI,IAAIQ,IAAIF,KAAZ,EAAmBE,IAAI,CAAvB,EAA0BA,GAA1B,EAA8B;AAC1BD,iBAAKJ,IAAL,CAAUM,OAAV,CAAkB,KAAlB;AACH;AACDP,iBAASJ,UAAUI,MAAV,EAAiBK,IAAjB,CAAT;AACH,KAPD;;AASA,WAAOL,MAAP;AACH;;AAED,SAASQ,KAAT,CAAeV,EAAf,EAAkBC,EAAlB,EAAsB;AAClB,QAAIC,SAASH,UAAUC,EAAV,EAAaC,EAAb,CAAb;AACAC,WAAOS,UAAP,GAAoBX,GAAGW,UAAH,KAAkBV,GAAGU,UAAzC;AACA,WAAOT,MAAP;AACH;;AAEDU,OAAOC,OAAP,GAAiBH,KAAjB","file":"binaryMulti.js","sourcesContent":["let BinaryNumberState = require('./binaryNumberState');\nlet binaryAdd = require('./binaryAdd');\n\nfunction multiImpl(n1,n2){\n    let result = new BinaryNumberState();\n\n    n2.bits.forEach(function (value, index) {\n        if(value === false) return;\n        let temp = new BinaryNumberState(n1);\n        for(let i = index; i > 0; i--){\n            temp.bits.unshift(false);\n        }\n        result = binaryAdd(result,temp);\n    });\n\n    return result;\n}\n\nfunction multi(n1,n2) {\n    let result = multiImpl(n1,n2);\n    result.isPositive = n1.isPositive === n2.isPositive;\n    return result;\n}\n\nmodule.exports = multi;"]}