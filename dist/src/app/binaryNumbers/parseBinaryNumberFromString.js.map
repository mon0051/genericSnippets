{"version":3,"sources":["../../../../src/app/binaryNumbers/parseBinaryNumberFromString.js"],"names":["MixedNumeral","require","BinaryFraction","parseBinaryNumberFromString","input","length","wholeNumbers","replace","fraction","parseInt","Math","pow","module","exports"],"mappings":";;AAAA,IAAIA,eAAeC,QAAQ,uBAAR,CAAnB;AACA,IAAIC,iBAAiBD,QAAQ,yBAAR,CAArB;;AAEA;;;;AAIA,SAASE,2BAAT,CAAqCC,KAArC,EAA4C;AACxC,QAAGA,MAAMC,MAAN,KAAiB,CAApB,EAAsB;AAClB,eAAO,IAAIL,YAAJ,CAAiB,CAAjB,CAAP;AACH;AACD,QAAIM,eAAeF,MAAMG,OAAN,CAAc,OAAd,EAAsB,EAAtB,CAAnB;AACA,QAAIC,WAAWJ,MAAMG,OAAN,CAAc,OAAd,EAAsB,EAAtB,CAAf;AACA;AACA,WAAO,IAAIP,YAAJ,CAAiBS,SAASH,YAAT,CAAjB,EAAwC,IAAIJ,cAAJ,CAAmBO,SAASD,QAAT,CAAnB,EAAuCE,KAAKC,GAAL,CAAS,EAAT,EAAYH,SAASH,MAArB,CAAvC,CAAxC,CAAP;AACH;;AAEDO,OAAOC,OAAP,GAAiBV,2BAAjB","file":"parseBinaryNumberFromString.js","sourcesContent":["let MixedNumeral = require('./simple/MixedNumeral');\nlet BinaryFraction = require('./simple/BinaryFraction');\n\n/**\n * @param {string} input\n * @returns {MixedNumeral}\n */\nfunction parseBinaryNumberFromString(input) {\n    if(input.length === 0){\n        return new MixedNumeral(0);\n    }\n    let wholeNumbers = input.replace(/\\.\\d*/,\"\");\n    let fraction = input.replace(/\\d*\\./,\"\");\n    // TODO : Make this \"lossless\"\n    return new MixedNumeral(parseInt(wholeNumbers),new BinaryFraction(parseInt(fraction),(Math.pow(10,fraction.length))));\n}\n\nmodule.exports = parseBinaryNumberFromString;"]}