{"version":3,"sources":["../../../../src/app/binaryNumbers/binarySubtract.js"],"names":["BinaryNumberState","require","borrowBit","number","index","subImpl","n1","n2","result","binarySub","bits","length","module","exports"],"mappings":";;AAAA,IAAIA,oBAAoBC,QAAQ,qBAAR,CAAxB;;AAGA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;AAC9B,UAAM,8BAAN;AACH;;AAED,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,EAArB,EAAyB;AACrB,QAAIC,SAAS,IAAIR,iBAAJ,EAAb;;AAEA,UAAM,4BAAN;AACA,WAAOQ,MAAP;AACH;;AAED;;;;;AAKA,SAASC,SAAT,CAAmBH,EAAnB,EAAuBC,EAAvB,EAA2B;AACvB,QAAID,GAAGI,IAAH,CAAQC,MAAR,GAAiBJ,GAAGG,IAAH,CAAQC,MAA7B,EAAqC;AACjC,eAAON,QAAQC,EAAR,EAAYC,EAAZ,CAAP;AACH,KAFD,MAEO;AACH,eAAOF,QAAQE,EAAR,EAAYD,EAAZ,CAAP;AACH;AACJ;;AAEDM,OAAOC,OAAP,GAAiBJ,SAAjB","file":"binarySubtract.js","sourcesContent":["let BinaryNumberState = require('./binaryNumberState');\n\n\nfunction borrowBit(number, index) {\n    throw \"borrowBit is not implemented\";\n}\n\nfunction subImpl(n1, n2) {\n    let result = new BinaryNumberState();\n    \n    throw \"subImpl is not implemented\";\n    return result;\n}\n\n/**\n *  @param {BinaryNumberState} n1\n *  @param {BinaryNumberState} n2\n *  @return {BinaryNumberState}\n **/\nfunction binarySub(n1, n2) {\n    if (n1.bits.length > n2.bits.length) {\n        return subImpl(n1, n2);\n    } else {\n        return subImpl(n2, n1);\n    }\n}\n\nmodule.exports = binarySub;"]}