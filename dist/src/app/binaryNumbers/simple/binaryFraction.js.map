{"version":3,"sources":["../../../../../src/app/binaryNumbers/simple/BinaryFraction.js"],"names":["BinaryNumberState","require","BinaryFraction","numerator","denominator","that","toJsNumber","toString","module","exports"],"mappings":";;AAAA,IAAIA,oBAAoBC,QAAQ,+BAAR,CAAxB;AACA;;;;;AAKA,SAASC,cAAT,CAAwBC,SAAxB,EAAkCC,WAAlC,EAA8C;AAC1C,QAAIC,OAAO,IAAX;AACA,SAAKF,SAAL,GAAiB,IAAIH,iBAAJ,CAAsBG,SAAtB,CAAjB;AACA,SAAKC,WAAL,GAAmB,IAAIJ,iBAAJ,CAAsBI,WAAtB,CAAnB;;AAEA,SAAKE,UAAL,GAAkB,YAAU;AACxB,eAAQD,KAAKF,SAAL,CAAeG,UAAf,KAA8BD,KAAKD,WAAL,CAAiBE,UAAjB,EAAtC;AACH,KAFD;;AAIA,SAAKC,QAAL,GAAgB,YAAY;AACxB,eAAO,yBAAP;AACH,KAFD;AAGH;;AAEDC,OAAOC,OAAP,GAAiBP,cAAjB","file":"BinaryFraction.js","sourcesContent":["let BinaryNumberState = require('./low-level/BinaryNumberState');\n/**\n * @param {BinaryNumberState} numerator\n * @param {BinaryNumberState} denominator\n * @constructor\n */\nfunction BinaryFraction(numerator,denominator){\n    let that = this;\n    this.numerator = new BinaryNumberState(numerator);\n    this.denominator = new BinaryNumberState(denominator);\n\n    this.toJsNumber = function(){\n        return (that.numerator.toJsNumber() / that.denominator.toJsNumber());\n    };\n\n    this.toString = function () {\n        return \"[object BinaryFraction]\";\n    }\n}\n\nmodule.exports = BinaryFraction;"]}