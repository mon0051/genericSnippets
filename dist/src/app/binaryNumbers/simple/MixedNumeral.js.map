{"version":3,"sources":["../../../../../src/app/binaryNumbers/simple/MixedNumeral.js"],"names":["BinaryNumberState","require","BinaryFraction","MixedNumeral","integer","fraction","that","toJsNumber","module","exports"],"mappings":";;AAAA,IAAIA,oBAAoBC,QAAQ,+BAAR,CAAxB;AACA,IAAIC,iBAAiBD,QAAQ,kBAAR,CAArB;;AAEA,SAASE,YAAT,CAAsBC,OAAtB,EAA8BC,QAA9B,EAAuC;AACnC,QAAIC,OAAO,IAAX;;AAEAA,SAAKF,OAAL,GAAe,IAAIJ,iBAAJ,CAAsBI,OAAtB,KAAkC,IAAIJ,iBAAJ,CAAsB,CAAtB,CAAjD;AACAM,SAAKD,QAAL,GAAgBA,YAAY,IAAIH,cAAJ,CAAmB,IAAIF,iBAAJ,CAAsB,CAAtB,CAAnB,EAA4C,IAAIA,iBAAJ,CAAsB,CAAtB,CAA5C,CAA5B;;AAEA,SAAKO,UAAL,GAAkB,YAAU;AACxB,eAAQD,KAAKF,OAAL,CAAaG,UAAb,EAAD,GAA+BD,KAAKD,QAAL,CAAcE,UAAd,EAAtC;AACH,KAFD;AAGH;;AAEDC,OAAOC,OAAP,GAAiBN,YAAjB","file":"MixedNumeral.js","sourcesContent":["let BinaryNumberState = require('./low-level/BinaryNumberState');\nlet BinaryFraction = require('./BinaryFraction');\n\nfunction MixedNumeral(integer,fraction){\n    let that = this;\n\n    that.integer = new BinaryNumberState(integer) || new BinaryNumberState(0);\n    that.fraction = fraction || new BinaryFraction(new BinaryNumberState(0),new BinaryNumberState(0));\n\n    this.toJsNumber = function(){\n        return (that.integer.toJsNumber()) + (that.fraction.toJsNumber());\n    }\n}\n\nmodule.exports = MixedNumeral;"]}